TRACE_OUT=function(i)
    return OUTFILEPREF.."."..i..".txt.gz"
end

options = {
	max_nanos="200k", -- after 0.2ms, the simulation ends
	sampler={ type="simple", quantum="100k", },
		-- simple means timing simulation is always on
		-- depending on the MHz of the machine, this should
		-- print between 5 and 10 TIME=... messages
	heartbeat={ type="file_last", logfile="trace_stats.log" }, 
		-- one result file in trace_stats.log
}

-- change this to point to your bsd and hdd
-- you can use absolute paths here or else
-- placed the bsd and hdd in the data directory
-- of this distribution
simnow.commands=function()
	use_bsd('1p-karmic64.bsd')
	use_hdd('karmic64.img')
	set_journal()
	-- this next string is input by simulating
	-- keystrokes. Our machine is in text mode
	-- expecting a command and this next command
	-- will execute a simple command
	-- You do not need to issue the \n
	send_keyboard('gcc -O3 -c -w /home/user/test.i')
end

function build()
	-- we assign disk timers to all the disks in the system
	i=0
	while i < disks() do
		disk=get_disk(i)
		disk:timer{ name='disk'..i, type="simple_disk" }
		i=i+1
	end

	-- we assign nic timers to all the disks in the system
	i=0
	while i < nics() do
		nic=get_nic(i)
		nic:timer{ name='nic'..i, type="simple_nic" }
		i=i+1
	end

	i=0
	while i < cpus() do
		-- we assign a timer that dumps all instructions
		-- and prints stats of them at the end. The traces
		-- are stored in /tmp
		get_cpu(i):timer{ name='cpu'..i, type="trace_stats", trace_file=TRACE_OUT(i) }
		i=i+1
	end
end
-- vim:ft=lua
