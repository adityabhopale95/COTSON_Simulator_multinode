options.heartbeat={ type="file_last", logfile="/tmp/logfile.txt" }

options.injection_type="memory"

function build()
    cpu=new_cpu(os.getenv('DATA_DIR')..'/test/uni.gz')
    cpu:timer{ name='cpu0', type="timer0" }

 	 mem=HybridMemory{ name="main", latency=100, dram_size="1MB", flash_rlatency=500, flash_wlatency=2000, flash_pagesize=512, flash_pages_per_block=16, flash_size="2GB", policy="map", strategy="LRU" } 

    l2=Cache{ name="l2cache", size="512kB", line_size=16, latency=20, num_sets=4, next=mem, write_policy="WB", write_allocate="true" }
    t2=TLB{ name="l2tlb", page_size="4kB", entries=512, latency=80, num_sets=4, next=mem, write_policy="WB", write_allocate="true" }

    ic=Cache{ name="icache", size="16kB", line_size=16, latency=0, num_sets=2, next=l2, write_policy="WT", write_allocate="false" }
    dc=Cache{ name="dcache", size="16kB", line_size=16, latency=0, num_sets=2, next=l2, write_policy="WT", write_allocate="false" }
    it=TLB{ name="itlb", page_size="4kB", entries=40, latency=0, num_sets=40, next=t2, write_policy="WT", write_allocate="false" }
    dt=TLB{ name="dtlb", page_size="4kB", entries=40, latency=0, num_sets=40, next=t2, write_policy="WT", write_allocate="false" }

    cpu:instruction_cache(ic)
    cpu:data_cache(dc)
    cpu:instruction_tlb(it)
    cpu:data_tlb(dt)

	 memory_inject(mem,os.getenv('DATA_DIR')..'/test/memorytrace.tar.gz')
end
-- vim:ft=lua
