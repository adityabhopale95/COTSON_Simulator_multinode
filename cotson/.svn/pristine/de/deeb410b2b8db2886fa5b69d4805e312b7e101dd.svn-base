#!/usr/bin/perl
#
# Invoke it with a test logfile and it generates a script to update the outputs
# Example: ./test_update < ../test.log > xx; sh xx
#
use strict;
my %FILES = (
    "simnow.out"             => "simnow_output",
    "injector.out"           => "injector_output",
    "abaeterno.out"          => "abaeterno_output",
    "disksim_output_%d"      => "disksim_%d",
    "disktrace_output_%d"    => "disktrace_%d",
    "abaeterno.out_hb.%d"    => "abaeterno_output_hb.%d",
    "disasm_output"          => "disasm",
    "sp_log"              => "simpoint_profile",
);

while (<>) {
   chomp;
   ## failed  '001' (different abeterno output) [/tmp/test-001-pTVs]
   if (/failed.*'([0-9]+)'.*\[(.*)\]/) {
       my $test = $1;
       my $out = "$2";
       print "### FAILED $test => $out\n";
       foreach my $n (keys %FILES) {
           my $fnew = "$out/data/$n";
           my $fold = "$test/$FILES{$n}";
           print "/bin/cp -f $fnew $fold\n" if (-e $fnew and -e $fold);
           if ($n =~ /%d/) {
               foreach my $i (0..100) {
                   my $fnew = sprintf("$out/data/$n",$i);
                   my $fold = sprintf("$test/$FILES{$n}",$i);;
                   print "/bin/cp -f $fnew $fold\n" if (-e $fnew and -e $fold);
               }
           }
       }
   }
}

