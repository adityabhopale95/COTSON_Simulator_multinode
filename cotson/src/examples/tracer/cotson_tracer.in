abaeterno_so="abaeterno-tracer.so"

options = {
	-- Tell simulation to end after completion
	-- The execution script must "xput" a file called terminate
	exit_trigger='terminate',
	sampler={ type="selective_tracing",quantity="2",constructor="sampler_constructor",changer="zone_changer" },
	heartbeat={ type="file_last", logfile="cotson_tracer.log" }, 
		-- one result file in cotson_tracer.log
}
one_node_script="run_interactive"
display="auto"
--display=os.getenv("DISPLAY")

-- the function that decides what timer to use
function sampler_constructor(i)
	if i == 0 then return {type="no_timing", quantum="1M"} end
	if i == 1 then return {type="simple", quantum="1M"} end 
end

-- the function that decides the zone sequence
function zone_changer(start,i)
	if start then -- entering zone i
        print("### entering zone " .. i)
		return 1
	end
	if not start then -- leaving zone i
        print("### leaving zone " .. i)
		return 0
	end
end

-- change this to point to your bsd and hdd
-- you can use absolute paths here or else
-- place the bsd and hdd in the data directory
-- of this distribution
simnow.commands=function()
	use_bsd('1p-karmic64.bsd')
	use_hdd('karmic64.img')
	set_journal()
	-- we execute run.sh which invokes the custom tracer
	execute('run.sh');
end

function build()
	i=0
	while i < disks() do
		disk=get_disk(i)
		disk:timer{ name='disk'..i, type="simple_disk", }
		i=i+1
	end

	i=0
	while i < nics() do
		nic=get_nic(i)
		nic:timer{ name='nic'..i, type="simple_nic", }
		i=i+1
	end

	-- not really being used since we are in no_timing
	-- nevertheless, for now, you have to define a timer for
	-- each cpu or else it will fail miserably
	get_cpu(0):timer{ name='cpu0', type="timer0" }
end

-- vim:ft=lua
