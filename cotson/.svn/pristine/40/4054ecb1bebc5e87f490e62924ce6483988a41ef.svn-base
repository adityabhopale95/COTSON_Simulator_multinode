#!/bin/bash

NODE=$1
TOTAL_NODES=$2
NET="192.168"
MASK="255.255.0.0"
SUBNET="$NET.10"
GW="$SUBNET.2"

# Workaround for last version of Linux kernel
INTF=`ifconfig -a | sed 's/[ \t].*//;/^$/d' | grep -m1 "^e"`

DEBUG=1

name() { echo "n$1"; }
mac() { echo "FA:CD:1:0:0:$1"; }
ip() { echo "$SUBNET.$(expr 10 + $1)"; }

log()
{
	if [ $DEBUG -eq 1 ] ; then
		echo "$1"
	fi
}

log "fill /etc/hosts"
echo "127.0.0.1 localhost" > /etc/hosts
for n in $(seq 1 $TOTAL_NODES); do
    echo "$(ip $n) $(name $n) ## $(mac $n)" >> /etc/hosts
done

netscript="/etc/init.d/networking"
# if [ -e /usr/sbin/service ]; then
#     netscript="/usr/sbin/service networking"
# fi

log 
log "cotson_network_restart"
log 
log "  stopping all network commands"
# if [ -f /etc/init.d/xcgd ]; then
#     /etc/init.d/xcgd stop
# fi
$netscript stop > /dev/null 2>&1
/sbin/ifconfig $INTF down
pkill -9 dhclient3  ## just in case

# modprobe -r e1000
# modprobe e1000 TxIntDelay=0 RxIntDelay=0 InterruptThrottleRate=3 
# dmesg | tail -n 80

log "  generating /etc/network/interfaces"
cat > /etc/network/interfaces<<EOF
auto lo
iface lo inet loopback

auto $INTF
iface $INTF inet static
	address $(ip $NODE)
	netmask $MASK
	network $NET
	gateway $GW
EOF

log "  cleaning /etc/resolv.conf"
echo "" > /etc/resolv.conf

#log "  sysctl configuration"
#sysctl -q -w net.core.rmem_default="262144"
#sysctl -q -w net.core.wmem_default="262144"
#sysctl -q -w net.core.rmem_max="8388608"
#sysctl -q -w net.core.wmem_max="8388608"
#sysctl -q -w net.core.netdev_max_backlog="20000"
#sysctl -q -w fs.file-max="3241615"
#sysctl -q -w kernel.randomize_va_space="0"
#sysctl -q -w net.ipv4.tcp_mem="262144 262144 8388608"
#sysctl -q -w net.ipv4.tcp_rmem="262144 262144 8388608"
#sysctl -q -w net.ipv4.tcp_wmem="262144 262144 8388608"
#sysctl -q -w net.ipv4.tcp_sack="0"
#sysctl -q -w net.ipv4.tcp_timestamps="0"
#sysctl -q -w net.ipv4.route.flush="1"
## sysctl -q -w net.ipv4.no_metrics_save="1"
 
log "  baptize nic"
/sbin/ifconfig $INTF hw ether $(mac $NODE)
/sbin/ifconfig $INTF $(ip $NODE)
# /sbin/ifconfig eth0 txqueuelen 20000
# /sbin/ifconfig eth0 mtu 9000

log "  setting hostname"
hostname $(name $NODE)
hostname > /etc/hostname

log "  start networking"
$netscript start > /dev/null 2>&1
# if [ -f /etc/init.d/xcgd ]; then
#     /etc/init.d/xcgd start
# fi
